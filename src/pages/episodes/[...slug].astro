---
import Layout from '../../layouts/Layout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import { podcastSettings } from '../../config/settings';

export async function getStaticPaths() {
  const episodeEntries = await getCollection('episodes');
  
  return episodeEntries.map((entry: CollectionEntry<'episodes'>) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props as { entry: CollectionEntry<'episodes'> };
const { Content } = await entry.render();

// Prepare SEO metadata for this episode
const episodeTitle = `${entry.data.title} | ${podcastSettings.title}`;
const episodeDescription = entry.data.description || `${entry.data.title} - ${new Date(entry.data.date).toLocaleDateString()}`;
const canonicalURL = `/episodes/${entry.slug}`;
const audioURL = `${podcastSettings.paths.audio}/${entry.data.audioFile}`;

// Prepare structured data for this episode
const episodeStructuredData = {
  "@context": "https://schema.org",
  "@type": "PodcastEpisode",
  "name": entry.data.title,
  "datePublished": entry.data.date.toISOString(),
  "description": episodeDescription,
  "url": new URL(canonicalURL, podcastSettings.siteUrl).toString(),
  "associatedMedia": {
    "@type": "AudioObject",
    "contentUrl": audioURL,
    "encodingFormat": "audio/mpeg"
  },
  "partOfSeries": {
    "@type": "PodcastSeries",
    "name": podcastSettings.title,
    "url": podcastSettings.siteUrl
  }
};
---

<Layout 
  title={episodeTitle}
  description={episodeDescription}
  canonicalURL={canonicalURL}
>
  <script type="application/ld+json" set:html={JSON.stringify(episodeStructuredData)}></script>
  <div class="episode-container">
    <h1>{entry.data.title}</h1>
    <p class="episode-date">{new Date(entry.data.date).toLocaleDateString()} - <a href={podcastSettings.website.url} style="color:#333">{podcastSettings.website.name}</a></p>
    
    {entry.data.description && (
      <p class="episode-description">{entry.data.description}</p>
    )}
    
    <div class="audio-player">
      <audio controls src={`${podcastSettings.paths.audio}/${entry.data.audioFile}`}>
        Your browser does not support the audio element.
      </audio>
      <a href={`${podcastSettings.paths.audio}/${entry.data.audioFile}`} download={entry.data.audioFile} class="download-button">
        Download
      </a>
    </div>

    {podcastSettings.promotions.length > 0 && (
      <p class="episode-description" style="text-align: center;" set:html={podcastSettings.promotions[0]}></p>
    )}
    
    <div class="episode-content">
      <Content />
    </div>
    
    <div class="back-link">
      <a href="/">‚Üê Back to all episodes</a>
    </div>
  </div>
</Layout>

<style>
  .episode-container {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem;
  }
  
  h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: #333;
  }
  
  .episode-date {
    color: #666;
    font-size: 0.9rem;
    margin-bottom: 1rem;
  }
  
  .episode-description {
    color: #444;
    font-size: 1.1rem;
    line-height: 1.5;
    margin-bottom: 2rem;
    font-style: italic;
  }
  
  .audio-player {
    margin-bottom: 2rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  audio {
    width: 100%;
    border-radius: 30px;
  }
  
  .download-button {
    display: inline-block;
    background: {podcastSettings.theme.colors.primary};
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    text-decoration: none;
    text-align: center;
    font-weight: 500;
    transition: background 0.2s ease;
    width: fit-content;
  }
  
  .download-button:hover {
    background: {podcastSettings.theme.colors.primaryHover};
  }
  
  .episode-content {
    line-height: 1.6;
    color: #333;
    margin-bottom: 2rem;
  }
  
  .episode-content p {
    margin-bottom: 1.5rem;
  }
  
  .back-link {
    margin-top: 2rem;
  }
  
  .back-link a {
    color: {podcastSettings.theme.colors.primary};
    text-decoration: none;
    font-weight: 500;
    display: inline-flex;
    align-items: center;
    transition: color 0.2s ease;
  }
  
  .back-link a:hover {
    color: {podcastSettings.theme.colors.primaryHover};
  }
  
  @media (max-width: 600px) {
    .episode-container {
      padding: 1rem;
    }
    
    h1 {
      font-size: 2rem;
    }
  }
</style>
